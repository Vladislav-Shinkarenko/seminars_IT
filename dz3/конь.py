'''
N - размеры доски
i,j - координаты начальной позиции коня
x,y - координаты точки куда необходимо добраться

Напишем код с полным перебором клеток куда конь может походить с некоторыми ограничениями.
В общем случае, на безграничной доске, конь может походить на 8 различных клеток. 
Случаи когда конь будет отдаляться от нужной клетки по 2 координатам сразу, нас не интересует.
Таким образом получим полный перебор ходов в заданном квадрате, и случае с отдалением не будут считаться.

'''

def solution(N, i, j, x, y):
    
    count = 0
    xod = (1,2,2,1,-1,2,-2,1,1,-2,2,-1,-1,-2,-2,-1) #вариации ходов
    if x > N or y > N: return 'wrong data, no'
    if (i,j) != (x,y): f = True #флаг
    moves1 = [(i,j)]
    moves2 = []
    
    while f == True:
        #print(count+1)
        for u,v in moves1:
            for c in range(0,16, 2):
                
                a = u + xod[c]
                b = v + xod[c+1]
    
                if (a,b) == (x,y):
                    f = False #выход из вложенного цикла
                    break
                if 0<a<=N and 0<b<=N:
                    if ((abs(x - u) - abs(x - a)) > 0) or ((abs(y - v) - abs(y - b)) > 0):
                        moves2.append((a,b))
                #print(moves2)
                
        moves1 = moves2
        moves2 = []
        count += 1
    
    
    return count

print(solution(8,1,1,4,5), 'moves')